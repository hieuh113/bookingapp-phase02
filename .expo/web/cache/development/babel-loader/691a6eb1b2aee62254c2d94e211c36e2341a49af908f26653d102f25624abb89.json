{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Icon } from '@rneui/themed';\nimport { useSelector } from 'react-redux';\nimport HomeScreen from \"../screens/HomeScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\nimport HotelDetailsScreen from \"../screens/HotelDetailsScreen\";\nimport BookingScreen from \"../screens/BookingScreen\";\nimport PaymentScreen from \"../screens/PaymentScreen\";\nimport BookingConfirmationScreen from \"../screens/BookingConfirmationScreen\";\nimport BookingHistoryScreen from \"../screens/BookingHistoryScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport SplashScreen from \"../screens/SplashScreen\";\nimport ShortVideosScreen from \"../screens/ShortVideosScreen\";\nimport ItineraryScreen from \"../screens/ItineraryScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar MainTabNavigator = function MainTabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = 'home';\n          } else if (route.name === 'Search') {\n            iconName = 'search';\n          } else if (route.name === 'Bookings') {\n            iconName = 'calendar';\n          } else if (route.name === 'Profile') {\n            iconName = 'person';\n          } else if (route.name === 'Videos') {\n            iconName = 'videocam';\n          }\n          return _jsx(Icon, {\n            name: iconName,\n            type: \"ionicon\",\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#007BFF',\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeStackNavigator\n    }), _jsx(Tab.Screen, {\n      name: \"Search\",\n      component: SearchStackNavigator\n    }), _jsx(Tab.Screen, {\n      name: \"Videos\",\n      component: ShortVideosScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Bookings\",\n      component: BookingStackNavigator\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileStackNavigator\n    })]\n  });\n};\nvar HomeStackNavigator = function HomeStackNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"HomeScreen\",\n      component: HomeScreen,\n      options: {\n        title: 'Home'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"HotelDetails\",\n      component: HotelDetailsScreen,\n      options: {\n        title: 'Hotel Details'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Booking\",\n      component: BookingScreen,\n      options: {\n        title: 'Book Now'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Payment\",\n      component: PaymentScreen,\n      options: {\n        title: 'Payment'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"BookingConfirmation\",\n      component: BookingConfirmationScreen,\n      options: {\n        title: 'Booking Confirmation'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Itinerary\",\n      component: ItineraryScreen,\n      options: {\n        title: 'Create Itinerary'\n      }\n    })]\n  });\n};\nvar SearchStackNavigator = function SearchStackNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"SearchScreen\",\n      component: SearchScreen,\n      options: {\n        title: 'Search'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"HotelDetails\",\n      component: HotelDetailsScreen,\n      options: {\n        title: 'Hotel Details'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Booking\",\n      component: BookingScreen,\n      options: {\n        title: 'Book Now'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Payment\",\n      component: PaymentScreen,\n      options: {\n        title: 'Payment'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"BookingConfirmation\",\n      component: BookingConfirmationScreen,\n      options: {\n        title: 'Booking Confirmation'\n      }\n    })]\n  });\n};\nvar BookingStackNavigator = function BookingStackNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"BookingHistory\",\n      component: BookingHistoryScreen,\n      options: {\n        title: 'My Bookings'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"BookingDetails\",\n      component: BookingConfirmationScreen,\n      options: {\n        title: 'Booking Details'\n      }\n    })]\n  });\n};\nvar ProfileStackNavigator = function ProfileStackNavigator() {\n  return _jsx(Stack.Navigator, {\n    children: _jsx(Stack.Screen, {\n      name: \"ProfileScreen\",\n      component: ProfileScreen,\n      options: {\n        title: 'My Profile'\n      }\n    })\n  });\n};\nvar AuthStackNavigator = function AuthStackNavigator() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Register\",\n      component: RegisterScreen\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    isAuthenticated = _useSelector.isAuthenticated,\n    loading = _useSelector.loading;\n  if (loading) {\n    return _jsx(SplashScreen, {});\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: isAuthenticated ? _jsx(Stack.Screen, {\n        name: \"Main\",\n        component: MainTabNavigator\n      }) : _jsx(Stack.Screen, {\n        name: \"Auth\",\n        component: AuthStackNavigator\n      })\n    })\n  });\n};\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","createBottomTabNavigator","Icon","useSelector","HomeScreen","SearchScreen","HotelDetailsScreen","BookingScreen","PaymentScreen","BookingConfirmationScreen","BookingHistoryScreen","ProfileScreen","LoginScreen","RegisterScreen","SplashScreen","ShortVideosScreen","ItineraryScreen","jsx","_jsx","jsxs","_jsxs","Stack","Tab","MainTabNavigator","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","type","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","children","Screen","component","HomeStackNavigator","SearchStackNavigator","BookingStackNavigator","ProfileStackNavigator","options","title","AuthStackNavigator","AppNavigator","_useSelector","state","auth","isAuthenticated","loading"],"sources":["C:/Users/LEGION/Desktop/LAB Projects/bookingapp-phase02/src/navigation/AppNavigator.js"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Icon } from '@rneui/themed';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// Import screens\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport SearchScreen from '../screens/SearchScreen';\r\nimport HotelDetailsScreen from '../screens/HotelDetailsScreen';\r\nimport BookingScreen from '../screens/BookingScreen';\r\nimport PaymentScreen from '../screens/PaymentScreen';\r\nimport BookingConfirmationScreen from '../screens/BookingConfirmationScreen';\r\nimport BookingHistoryScreen from '../screens/BookingHistoryScreen';\r\nimport ProfileScreen from '../screens/ProfileScreen';\r\nimport LoginScreen from '../screens/LoginScreen';\r\nimport RegisterScreen from '../screens/RegisterScreen';\r\nimport SplashScreen from '../screens/SplashScreen';\r\nimport ShortVideosScreen from '../screens/ShortVideosScreen';\r\nimport ItineraryScreen from '../screens/ItineraryScreen';\r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\n// Main tab navigator\r\nconst MainTabNavigator = () => {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === 'Home') {\r\n            iconName = 'home';\r\n          } else if (route.name === 'Search') {\r\n            iconName = 'search';\r\n          } else if (route.name === 'Bookings') {\r\n            iconName = 'calendar';\r\n          } else if (route.name === 'Profile') {\r\n            iconName = 'person';\r\n          } else if (route.name === 'Videos') {\r\n            iconName = 'videocam';\r\n          }\r\n\r\n          return <Icon name={iconName} type=\"ionicon\" size={size} color={color} />;\r\n        },\r\n        tabBarActiveTintColor: '#007BFF',\r\n        tabBarInactiveTintColor: 'gray',\r\n        headerShown: false,\r\n      })}\r\n    >\r\n      <Tab.Screen name=\"Home\" component={HomeStackNavigator} />\r\n      <Tab.Screen name=\"Search\" component={SearchStackNavigator} />\r\n      <Tab.Screen name=\"Videos\" component={ShortVideosScreen} />\r\n      <Tab.Screen name=\"Bookings\" component={BookingStackNavigator} />\r\n      <Tab.Screen name=\"Profile\" component={ProfileStackNavigator} />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\n// Home stack navigator\r\nconst HomeStackNavigator = () => {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen \r\n        name=\"HomeScreen\" \r\n        component={HomeScreen} \r\n        options={{ title: 'Home' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"HotelDetails\" \r\n        component={HotelDetailsScreen} \r\n        options={{ title: 'Hotel Details' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Booking\" \r\n        component={BookingScreen} \r\n        options={{ title: 'Book Now' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Payment\" \r\n        component={PaymentScreen} \r\n        options={{ title: 'Payment' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"BookingConfirmation\" \r\n        component={BookingConfirmationScreen} \r\n        options={{ title: 'Booking Confirmation' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Itinerary\" \r\n        component={ItineraryScreen} \r\n        options={{ title: 'Create Itinerary' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\n// Search stack navigator\r\nconst SearchStackNavigator = () => {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen \r\n        name=\"SearchScreen\" \r\n        component={SearchScreen} \r\n        options={{ title: 'Search' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"HotelDetails\" \r\n        component={HotelDetailsScreen} \r\n        options={{ title: 'Hotel Details' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Booking\" \r\n        component={BookingScreen} \r\n        options={{ title: 'Book Now' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"Payment\" \r\n        component={PaymentScreen} \r\n        options={{ title: 'Payment' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"BookingConfirmation\" \r\n        component={BookingConfirmationScreen} \r\n        options={{ title: 'Booking Confirmation' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\n// Booking stack navigator\r\nconst BookingStackNavigator = () => {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen \r\n        name=\"BookingHistory\" \r\n        component={BookingHistoryScreen} \r\n        options={{ title: 'My Bookings' }}\r\n      />\r\n      <Stack.Screen \r\n        name=\"BookingDetails\" \r\n        component={BookingConfirmationScreen} \r\n        options={{ title: 'Booking Details' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\n// Profile stack navigator\r\nconst ProfileStackNavigator = () => {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen \r\n        name=\"ProfileScreen\" \r\n        component={ProfileScreen} \r\n        options={{ title: 'My Profile' }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\n// Auth stack navigator\r\nconst AuthStackNavigator = () => {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\n// Root navigator\r\nconst AppNavigator = () => {\r\n  const { isAuthenticated, loading } = useSelector((state) => state.auth);\r\n\r\n  if (loading) {\r\n    return <SplashScreen />;\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n        {isAuthenticated ? (\r\n          <Stack.Screen name=\"Main\" component={MainTabNavigator} />\r\n        ) : (\r\n          <Stack.Screen name=\"Auth\" component={AuthStackNavigator} />\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default AppNavigator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}