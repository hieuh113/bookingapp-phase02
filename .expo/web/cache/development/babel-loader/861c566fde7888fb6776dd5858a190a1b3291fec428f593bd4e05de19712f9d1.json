{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { store } from \"./src/redux/store.js\";\nimport AppNavigator from \"./src/navigation/AppNavigator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { loginSuccess } from \"./src/redux/slices/authSlice\";\nimport { mockApi } from \"./src/api/apiService\";\nimport SplashScreen from \"./src/screens/SplashScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  useEffect(function () {\n    var checkLoginStatus = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var token = yield AsyncStorage.getItem('token');\n          if (token) {\n            var user = {\n              id: '1',\n              name: 'John Doe',\n              email: 'john.doe@example.com'\n            };\n            store.dispatch(loginSuccess(user));\n          }\n        } catch (error) {\n          console.error('Error checking login status:', error);\n        } finally {\n          setTimeout(function () {\n            setIsLoading(false);\n          }, 2000);\n        }\n      });\n      return function checkLoginStatus() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    checkLoginStatus();\n    var preloadData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var hotels = yield mockApi.getHotels();\n        } catch (error) {\n          console.error('Error preloading data:', error);\n        }\n      });\n      return function preloadData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    preloadData();\n  }, []);\n  if (isLoading) {\n    return _jsx(SplashScreen, {});\n  }\n  return _jsx(Provider, {\n    store: store,\n    children: _jsxs(SafeAreaProvider, {\n      children: [_jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsx(AppNavigator, {})]\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","StatusBar","SafeAreaProvider","Provider","store","AppNavigator","AsyncStorage","loginSuccess","mockApi","SplashScreen","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","checkLoginStatus","_ref","_asyncToGenerator","token","getItem","user","id","name","email","dispatch","error","console","setTimeout","apply","arguments","preloadData","_ref2","hotels","getHotels","children","style"],"sources":["/Users/huynhquochieu/SWINBURNE/LAB/hotel-booking-app/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Provider } from 'react-redux';\nimport { store } from './src/redux/store.js';\nimport AppNavigator from './src/navigation/AppNavigator';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { loginSuccess } from './src/redux/slices/authSlice';\nimport { mockApi } from './src/api/apiService';\n\n// Create a placeholder splash screen component\nimport SplashScreen from './src/screens/SplashScreen';\n\nexport default function App() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const checkLoginStatus = async () => {\n      try {\n        const token = await AsyncStorage.getItem('token');\n        \n        if (token) {\n          // In a real app, you would validate the token with your backend\n          // For now, we'll just simulate a user being logged in\n          const user = {\n            id: '1',\n            name: 'John Doe',\n            email: 'john.doe@example.com',\n          };\n          \n          store.dispatch(loginSuccess(user));\n        }\n      } catch (error) {\n        console.error('Error checking login status:', error);\n      } finally {\n        // Simulate a loading delay\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 2000);\n      }\n    };\n\n    checkLoginStatus();\n    \n    // Preload some mock data\n    const preloadData = async () => {\n      try {\n        const hotels = await mockApi.getHotels();\n        // You could dispatch this to the store if needed\n      } catch (error) {\n        console.error('Error preloading data:', error);\n      }\n    };\n    \n    preloadData();\n  }, []);\n\n  if (isLoading) {\n    return <SplashScreen />;\n  }\n\n  return (\n    <Provider store={store}>\n      <SafeAreaProvider>\n        <StatusBar style=\"auto\" />\n        <AppNavigator />\n      </SafeAreaProvider>\n    </Provider>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,KAAK;AACd,OAAOC,YAAY;AACnB,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,YAAY;AACrB,SAASC,OAAO;AAGhB,OAAOC,YAAY;AAAmC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEtD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAkCf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9BjB,SAAS,CAAC,YAAM;IAEd,IAAMqB,gBAAgB;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QACnC,IAAI;UACF,IAAMC,KAAK,SAASjB,YAAY,CAACkB,OAAO,CAAC,OAAO,CAAC;UAEjD,IAAID,KAAK,EAAE;YAGT,IAAME,IAAI,GAAG;cACXC,EAAE,EAAE,GAAG;cACPC,IAAI,EAAE,UAAU;cAChBC,KAAK,EAAE;YACT,CAAC;YAEDxB,KAAK,CAACyB,QAAQ,CAACtB,YAAY,CAACkB,IAAI,CAAC,CAAC;UACpC;QACF,CAAC,CAAC,OAAOK,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACtD,CAAC,SAAS;UAERE,UAAU,CAAC,YAAM;YACfb,YAAY,CAAC,KAAK,CAAC;UACrB,CAAC,EAAE,IAAI,CAAC;QACV;MACF,CAAC;MAAA,gBAvBKC,gBAAgBA,CAAA;QAAA,OAAAC,IAAA,CAAAY,KAAA,OAAAC,SAAA;MAAA;IAAA,GAuBrB;IAEDd,gBAAgB,CAAC,CAAC;IAGlB,IAAMe,WAAW;MAAA,IAAAC,KAAA,GAAAd,iBAAA,CAAG,aAAY;QAC9B,IAAI;UACF,IAAMe,MAAM,SAAS7B,OAAO,CAAC8B,SAAS,CAAC,CAAC;QAE1C,CAAC,CAAC,OAAOR,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAChD;MACF,CAAC;MAAA,gBAPKK,WAAWA,CAAA;QAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;MAAA;IAAA,GAOhB;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIjB,SAAS,EAAE;IACb,OAAOP,IAAA,CAACF,YAAY,IAAE,CAAC;EACzB;EAEA,OACEE,IAAA,CAACR,QAAQ;IAACC,KAAK,EAAEA,KAAM;IAAAmC,QAAA,EACrB1B,KAAA,CAACX,gBAAgB;MAAAqC,QAAA,GACf5B,IAAA,CAACV,SAAS;QAACuC,KAAK,EAAC;MAAM,CAAE,CAAC,EAC1B7B,IAAA,CAACN,YAAY,IAAE,CAAC;IAAA,CACA;EAAC,CACX,CAAC;AAEf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}