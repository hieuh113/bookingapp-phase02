{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  hotels: [],\n  selectedHotel: null,\n  loading: false,\n  error: null,\n  filters: {\n    location: '',\n    priceRange: [0, 1000],\n    rating: 0,\n    dates: {\n      checkIn: null,\n      checkOut: null\n    }\n  }\n};\nvar hotelsSlice = createSlice({\n  name: 'hotels',\n  initialState: initialState,\n  reducers: {\n    fetchHotelsStart: function fetchHotelsStart(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchHotelsSuccess: function fetchHotelsSuccess(state, action) {\n      state.loading = false;\n      state.hotels = action.payload;\n      state.error = null;\n    },\n    fetchHotelsFailure: function fetchHotelsFailure(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    selectHotel: function selectHotel(state, action) {\n      state.selectedHotel = action.payload;\n    },\n    updateFilters: function updateFilters(state, action) {\n      state.filters = _objectSpread(_objectSpread({}, state.filters), action.payload);\n    },\n    applyFilters: function applyFilters(state) {}\n  }\n});\nvar _hotelsSlice$actions = hotelsSlice.actions,\n  fetchHotelsStart = _hotelsSlice$actions.fetchHotelsStart,\n  fetchHotelsSuccess = _hotelsSlice$actions.fetchHotelsSuccess,\n  fetchHotelsFailure = _hotelsSlice$actions.fetchHotelsFailure,\n  selectHotel = _hotelsSlice$actions.selectHotel,\n  updateFilters = _hotelsSlice$actions.updateFilters,\n  applyFilters = _hotelsSlice$actions.applyFilters;\nexport { fetchHotelsStart, fetchHotelsSuccess, fetchHotelsFailure, selectHotel, updateFilters, applyFilters };\nexport default hotelsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","hotels","selectedHotel","loading","error","filters","location","priceRange","rating","dates","checkIn","checkOut","hotelsSlice","name","reducers","fetchHotelsStart","state","fetchHotelsSuccess","action","payload","fetchHotelsFailure","selectHotel","updateFilters","_objectSpread","applyFilters","_hotelsSlice$actions","actions","reducer"],"sources":["/Users/huynhquochieu/SWINBURNE/LAB/hotel-booking-app/src/redux/slices/hotelsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  hotels: [],\n  selectedHotel: null,\n  loading: false,\n  error: null,\n  filters: {\n    location: '',\n    priceRange: [0, 1000],\n    rating: 0,\n    dates: {\n      checkIn: null,\n      checkOut: null,\n    },\n  },\n};\n\nconst hotelsSlice = createSlice({\n  name: 'hotels',\n  initialState,\n  reducers: {\n    fetchHotelsStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchHotelsSuccess: (state, action) => {\n      state.loading = false;\n      state.hotels = action.payload;\n      state.error = null;\n    },\n    fetchHotelsFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    selectHotel: (state, action) => {\n      state.selectedHotel = action.payload;\n    },\n    updateFilters: (state, action) => {\n      state.filters = { ...state.filters, ...action.payload };\n    },\n    applyFilters: (state) => {\n      // This is a placeholder for filter logic\n      // Actual filtering would typically happen in a thunk or on the server\n    },\n  },\n});\n\nexport const {\n  fetchHotelsStart,\n  fetchHotelsSuccess,\n  fetchHotelsFailure,\n  selectHotel,\n  updateFilters,\n  applyFilters,\n} = hotelsSlice.actions;\n\nexport default hotelsSlice.reducer; "],"mappings":";;;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,aAAa,EAAE,IAAI;EACnBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;IACPC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;IACrBC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE;MACLC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE;IACZ;EACF;AACF,CAAC;AAED,IAAMC,WAAW,GAAGb,WAAW,CAAC;EAC9Bc,IAAI,EAAE,QAAQ;EACdb,YAAY,EAAZA,YAAY;EACZc,QAAQ,EAAE;IACRC,gBAAgB,EAAE,SAAlBA,gBAAgBA,CAAGC,KAAK,EAAK;MAC3BA,KAAK,CAACb,OAAO,GAAG,IAAI;MACpBa,KAAK,CAACZ,KAAK,GAAG,IAAI;IACpB,CAAC;IACDa,kBAAkB,EAAE,SAApBA,kBAAkBA,CAAGD,KAAK,EAAEE,MAAM,EAAK;MACrCF,KAAK,CAACb,OAAO,GAAG,KAAK;MACrBa,KAAK,CAACf,MAAM,GAAGiB,MAAM,CAACC,OAAO;MAC7BH,KAAK,CAACZ,KAAK,GAAG,IAAI;IACpB,CAAC;IACDgB,kBAAkB,EAAE,SAApBA,kBAAkBA,CAAGJ,KAAK,EAAEE,MAAM,EAAK;MACrCF,KAAK,CAACb,OAAO,GAAG,KAAK;MACrBa,KAAK,CAACZ,KAAK,GAAGc,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,WAAW,EAAE,SAAbA,WAAWA,CAAGL,KAAK,EAAEE,MAAM,EAAK;MAC9BF,KAAK,CAACd,aAAa,GAAGgB,MAAM,CAACC,OAAO;IACtC,CAAC;IACDG,aAAa,EAAE,SAAfA,aAAaA,CAAGN,KAAK,EAAEE,MAAM,EAAK;MAChCF,KAAK,CAACX,OAAO,GAAAkB,aAAA,CAAAA,aAAA,KAAQP,KAAK,CAACX,OAAO,GAAKa,MAAM,CAACC,OAAO,CAAE;IACzD,CAAC;IACDK,YAAY,EAAE,SAAdA,YAAYA,CAAGR,KAAK,EAAK,CAGzB;EACF;AACF,CAAC,CAAC;AAEK,IAAAS,oBAAA,GAOHb,WAAW,CAACc,OAAO;EANrBX,gBAAgB,GAAAU,oBAAA,CAAhBV,gBAAgB;EAChBE,kBAAkB,GAAAQ,oBAAA,CAAlBR,kBAAkB;EAClBG,kBAAkB,GAAAK,oBAAA,CAAlBL,kBAAkB;EAClBC,WAAW,GAAAI,oBAAA,CAAXJ,WAAW;EACXC,aAAa,GAAAG,oBAAA,CAAbH,aAAa;EACbE,YAAY,GAAAC,oBAAA,CAAZD,YAAY;AACU,SAAAT,gBAAA,EAAAE,kBAAA,EAAAG,kBAAA,EAAAC,WAAA,EAAAC,aAAA,EAAAE,YAAA;AAExB,eAAeZ,WAAW,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}