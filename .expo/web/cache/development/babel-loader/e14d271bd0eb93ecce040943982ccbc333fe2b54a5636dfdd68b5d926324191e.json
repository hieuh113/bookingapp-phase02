{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nvar mockLocations = {\n  museums: [{\n    name: 'National History Museum',\n    time: '10:00 AM - 12:00 PM',\n    description: 'Explore ancient artifacts and historical exhibits',\n    image: 'https://images.unsplash.com/photo-1564501049412-61c2a3083791?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\n  }, {\n    name: 'Modern Art Gallery',\n    time: '2:00 PM - 4:00 PM',\n    description: 'Contemporary art exhibitions and installations',\n    image: 'https://images.unsplash.com/photo-1577720580479-7d839d829c73?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\n  }],\n  entertainment: [{\n    name: 'City Theme Park',\n    time: '11:00 AM - 5:00 PM',\n    description: 'Thrilling rides and attractions',\n    image: 'https://images.unsplash.com/photo-1560713781-d5a0d2d0c6e0?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\n  }, {\n    name: 'Evening Show',\n    time: '7:00 PM - 9:00 PM',\n    description: 'Local cultural performance',\n    image: 'https://images.unsplash.com/photo-1501281668745-f7f57925c3b4?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\n  }],\n  restaurants: [{\n    name: 'Local Cuisine Restaurant',\n    time: '12:30 PM - 2:00 PM',\n    description: 'Traditional dishes and specialties',\n    image: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\n  }, {\n    name: 'Fine Dining Experience',\n    time: '7:30 PM - 9:00 PM',\n    description: 'Gourmet dining with city views',\n    image: 'https://images.unsplash.com/photo-1414235077428-338989a2e8c0?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\n  }],\n  parks: [{\n    name: 'Central Park',\n    time: '9:00 AM - 11:00 AM',\n    description: 'Morning walk and nature exploration',\n    image: 'https://images.unsplash.com/photo-1501785888041-af3ef285b470?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\n  }, {\n    name: 'Botanical Gardens',\n    time: '3:00 PM - 5:00 PM',\n    description: 'Beautiful gardens and plant collections',\n    image: 'https://images.unsplash.com/photo-1585320806297-9794b3e4eeae?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\n  }]\n};\nvar ItineraryScreen = function ItineraryScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    destination = _useState2[0],\n    setDestination = _useState2[1];\n  var _useState3 = useState(new Date()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    startDate = _useState4[0],\n    setStartDate = _useState4[1];\n  var _useState5 = useState(new Date()),\n    _useState6 = _slicedToArray(_useState5, 2),\n    endDate = _useState6[0],\n    setEndDate = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showStartDatePicker = _useState8[0],\n    setShowStartDatePicker = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    showEndDatePicker = _useState0[0],\n    setShowEndDatePicker = _useState0[1];\n  var _useState1 = useState({\n      museums: false,\n      entertainment: false,\n      restaurants: false,\n      parks: false\n    }),\n    _useState10 = _slicedToArray(_useState1, 2),\n    selectedLocations = _useState10[0],\n    setSelectedLocations = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    generatedItinerary = _useState12[0],\n    setGeneratedItinerary = _useState12[1];\n  var handleStartDateChange = function handleStartDateChange(event, selectedDate) {\n    setShowStartDatePicker(false);\n    if (selectedDate) {\n      setStartDate(selectedDate);\n    }\n  };\n  var handleEndDateChange = function handleEndDateChange(event, selectedDate) {\n    setShowEndDatePicker(false);\n    if (selectedDate) {\n      setEndDate(selectedDate);\n    }\n  };\n  var toggleLocation = function toggleLocation(location) {\n    setSelectedLocations(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, location, !prev[location]));\n    });\n  };\n  var generateMockItinerary = function generateMockItinerary() {\n    var days = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24)) + 1;\n    var itinerary = [];\n    var _loop = function _loop() {\n      var dayActivities = [];\n      var currentDate = new Date(startDate);\n      currentDate.setDate(startDate.getDate() + i);\n      Object.entries(selectedLocations).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          locationType = _ref2[0],\n          isSelected = _ref2[1];\n        if (isSelected && mockLocations[locationType]) {\n          mockLocations[locationType].forEach(function (activity) {\n            dayActivities.push(_objectSpread(_objectSpread({}, activity), {}, {\n              type: locationType\n            }));\n          });\n        }\n      });\n      dayActivities.sort(function (a, b) {\n        var timeA = a.time.split(' - ')[0];\n        var timeB = b.time.split(' - ')[0];\n        return timeA.localeCompare(timeB);\n      });\n      itinerary.push({\n        date: currentDate.toLocaleDateString(),\n        activities: dayActivities\n      });\n    };\n    for (var i = 0; i < days; i++) {\n      _loop();\n    }\n    return itinerary;\n  };\n  var handleSubmit = function handleSubmit() {\n    if (!destination) {\n      Alert.alert('Error', 'Please enter a destination');\n      return;\n    }\n    var selectedCount = Object.values(selectedLocations).filter(Boolean).length;\n    if (selectedCount === 0) {\n      Alert.alert('Error', 'Please select at least one location type');\n      return;\n    }\n    var itinerary = generateMockItinerary();\n    setGeneratedItinerary(itinerary);\n  };\n  var renderLocationType = function renderLocationType(type, label, icon) {\n    return _jsxs(View, {\n      style: styles.settingItem,\n      children: [_jsxs(View, {\n        style: styles.settingItemLeft,\n        children: [_jsx(MaterialIcons, {\n          name: icon,\n          size: 24,\n          color: \"#007BFF\",\n          style: styles.settingIcon\n        }), _jsx(Text, {\n          style: styles.settingItemLabel,\n          children: label\n        })]\n      }), _jsx(Switch, {\n        value: selectedLocations[type],\n        onValueChange: function onValueChange() {\n          return toggleLocation(type);\n        },\n        trackColor: {\n          false: '#CCC',\n          true: '#007BFF'\n        },\n        thumbColor: \"#FFF\"\n      })]\n    });\n  };\n  var renderActivityCard = function renderActivityCard(activity, type) {\n    return _jsxs(View, {\n      style: styles.activityCard,\n      children: [_jsx(Image, {\n        source: {\n          uri: activity.image\n        },\n        style: styles.activityImage\n      }), _jsx(View, {\n        style: styles.activityOverlay\n      }), _jsxs(View, {\n        style: styles.activityContent,\n        children: [_jsxs(View, {\n          style: styles.activityHeader,\n          children: [_jsx(Text, {\n            style: styles.activityName,\n            children: activity.name\n          }), _jsx(View, {\n            style: styles.activityTypeContainer,\n            children: _jsx(Text, {\n              style: styles.activityType,\n              children: type.charAt(0).toUpperCase() + type.slice(1)\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.activityTimeContainer,\n          children: [_jsx(MaterialIcons, {\n            name: \"access-time\",\n            size: 16,\n            color: \"#fff\"\n          }), _jsx(Text, {\n            style: styles.activityTime,\n            children: activity.time\n          })]\n        }), _jsx(Text, {\n          style: styles.activityDescription,\n          children: activity.description\n        })]\n      })]\n    });\n  };\n  var renderItinerary = function renderItinerary() {\n    if (!generatedItinerary) return null;\n    return _jsxs(View, {\n      style: styles.itineraryContainer,\n      children: [_jsx(Text, {\n        style: styles.itineraryTitle,\n        children: \"Your Suggested Itinerary\"\n      }), generatedItinerary.map(function (day, index) {\n        return _jsxs(View, {\n          style: styles.dayContainer,\n          children: [_jsxs(View, {\n            style: styles.dayHeader,\n            children: [_jsxs(Text, {\n              style: styles.dayNumber,\n              children: [\"Day \", index + 1]\n            }), _jsx(Text, {\n              style: styles.dayDate,\n              children: day.date\n            })]\n          }), day.activities.map(function (activity, actIndex) {\n            return _jsx(View, {\n              style: styles.activityWrapper,\n              children: renderActivityCard(activity, activity.type)\n            }, actIndex);\n          })]\n        }, index);\n      })]\n    });\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: \"Create Your Itinerary\"\n      })\n    }), _jsxs(View, {\n      style: styles.formContainer,\n      children: [_jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(MaterialIcons, {\n          name: \"place\",\n          size: 24,\n          color: \"#007BFF\",\n          style: styles.inputIcon\n        }), _jsx(TextInput, {\n          style: styles.input,\n          value: destination,\n          onChangeText: setDestination,\n          placeholder: \"Enter your destination\",\n          placeholderTextColor: \"#999\"\n        })]\n      }), _jsxs(View, {\n        style: styles.dateSection,\n        children: [_jsxs(View, {\n          style: styles.dateContainer,\n          children: [_jsx(MaterialIcons, {\n            name: \"event\",\n            size: 24,\n            color: \"#007BFF\",\n            style: styles.inputIcon\n          }), _jsx(TouchableOpacity, {\n            style: styles.dateButton,\n            onPress: function onPress() {\n              return setShowStartDatePicker(true);\n            },\n            children: _jsxs(Text, {\n              style: styles.dateButtonText,\n              children: [\"Start: \", startDate.toLocaleDateString()]\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.dateContainer,\n          children: [_jsx(MaterialIcons, {\n            name: \"event\",\n            size: 24,\n            color: \"#007BFF\",\n            style: styles.inputIcon\n          }), _jsx(TouchableOpacity, {\n            style: styles.dateButton,\n            onPress: function onPress() {\n              return setShowEndDatePicker(true);\n            },\n            children: _jsxs(Text, {\n              style: styles.dateButtonText,\n              children: [\"End: \", endDate.toLocaleDateString()]\n            })\n          })]\n        })]\n      }), showStartDatePicker && _jsx(DateTimePicker, {\n        value: startDate,\n        mode: \"date\",\n        display: \"default\",\n        onChange: handleStartDateChange\n      }), showEndDatePicker && _jsx(DateTimePicker, {\n        value: endDate,\n        mode: \"date\",\n        display: \"default\",\n        onChange: handleEndDateChange\n      }), _jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Select Locations\"\n      }), renderLocationType('museums', 'Museums', 'museum'), renderLocationType('entertainment', 'Entertainment', 'attractions'), renderLocationType('restaurants', 'Restaurants', 'restaurant'), renderLocationType('parks', 'Parks', 'park'), _jsx(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: handleSubmit,\n        children: _jsx(Text, {\n          style: styles.submitButtonText,\n          children: \"Generate Itinerary\"\n        })\n      })]\n    }), renderItinerary()]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  header: {\n    padding: 20,\n    paddingTop: 40,\n    backgroundColor: '#007BFF',\n    borderBottomLeftRadius: 30,\n    borderBottomRightRadius: 30\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#fff',\n    textAlign: 'center'\n  },\n  formContainer: {\n    padding: 20,\n    backgroundColor: '#fff',\n    margin: 15,\n    borderRadius: 15,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    marginBottom: 15,\n    backgroundColor: '#fff'\n  },\n  inputIcon: {\n    marginRight: 10\n  },\n  input: {\n    flex: 1,\n    height: 50,\n    fontSize: 16,\n    color: '#333'\n  },\n  dateSection: {\n    marginBottom: 20\n  },\n  dateContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  dateButton: {\n    flex: 1,\n    height: 50,\n    justifyContent: 'center',\n    paddingHorizontal: 15,\n    backgroundColor: '#fff',\n    borderWidth: 1,\n    borderColor: '#E0E0E0',\n    borderRadius: 10,\n    marginLeft: 10\n  },\n  dateButtonText: {\n    fontSize: 16,\n    color: '#333'\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: '#333'\n  },\n  settingItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 15,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: '#E0E0E0'\n  },\n  settingItemLeft: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  settingIcon: {\n    marginRight: 10\n  },\n  settingItemLabel: {\n    fontSize: 16,\n    color: '#333'\n  },\n  submitButton: {\n    marginTop: 20,\n    backgroundColor: '#007BFF',\n    paddingVertical: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  submitButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  itineraryContainer: {\n    padding: 15\n  },\n  itineraryTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n    color: '#333'\n  },\n  dayContainer: {\n    marginBottom: 25\n  },\n  dayHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  dayNumber: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#007BFF',\n    marginRight: 10\n  },\n  dayDate: {\n    fontSize: 16,\n    color: '#666'\n  },\n  activityWrapper: {\n    marginBottom: 15\n  },\n  activityCard: {\n    height: 200,\n    borderRadius: 15,\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  activityImage: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute'\n  },\n  activityOverlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'rgba(0,0,0,0.4)'\n  }),\n  activityContent: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: 15\n  },\n  activityHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 5\n  },\n  activityName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#fff',\n    flex: 1\n  },\n  activityTypeContainer: {\n    backgroundColor: '#007BFF',\n    paddingHorizontal: 10,\n    paddingVertical: 4,\n    borderRadius: 12\n  },\n  activityType: {\n    color: '#fff',\n    fontSize: 12,\n    fontWeight: 'bold'\n  },\n  activityTimeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  activityTime: {\n    color: '#fff',\n    fontSize: 14,\n    marginLeft: 5\n  },\n  activityDescription: {\n    color: '#fff',\n    fontSize: 14,\n    opacity: 0.9\n  }\n});\nexport default ItineraryScreen;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TextInput","TouchableOpacity","ScrollView","Alert","Switch","Image","Dimensions","DateTimePicker","MaterialIcons","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","mockLocations","museums","name","time","description","image","entertainment","restaurants","parks","ItineraryScreen","_useState","_useState2","_slicedToArray","destination","setDestination","_useState3","Date","_useState4","startDate","setStartDate","_useState5","_useState6","endDate","setEndDate","_useState7","_useState8","showStartDatePicker","setShowStartDatePicker","_useState9","_useState0","showEndDatePicker","setShowEndDatePicker","_useState1","_useState10","selectedLocations","setSelectedLocations","_useState11","_useState12","generatedItinerary","setGeneratedItinerary","handleStartDateChange","event","selectedDate","handleEndDateChange","toggleLocation","location","prev","_objectSpread","_defineProperty","generateMockItinerary","days","Math","ceil","itinerary","_loop","dayActivities","currentDate","setDate","getDate","i","Object","entries","forEach","_ref","_ref2","locationType","isSelected","activity","push","type","sort","a","b","timeA","split","timeB","localeCompare","date","toLocaleDateString","activities","handleSubmit","alert","selectedCount","values","filter","Boolean","length","renderLocationType","label","icon","style","styles","settingItem","children","settingItemLeft","size","color","settingIcon","settingItemLabel","value","onValueChange","trackColor","false","true","thumbColor","renderActivityCard","activityCard","source","uri","activityImage","activityOverlay","activityContent","activityHeader","activityName","activityTypeContainer","activityType","charAt","toUpperCase","slice","activityTimeContainer","activityTime","activityDescription","renderItinerary","itineraryContainer","itineraryTitle","map","day","index","dayContainer","dayHeader","dayNumber","dayDate","actIndex","activityWrapper","container","header","title","formContainer","inputContainer","inputIcon","input","onChangeText","placeholder","placeholderTextColor","dateSection","dateContainer","dateButton","onPress","dateButtonText","mode","display","onChange","sectionTitle","submitButton","submitButtonText","create","flex","backgroundColor","padding","paddingTop","borderBottomLeftRadius","borderBottomRightRadius","fontSize","fontWeight","textAlign","margin","borderRadius","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","flexDirection","alignItems","borderWidth","borderColor","paddingHorizontal","marginBottom","marginRight","justifyContent","marginLeft","paddingVertical","marginTop","overflow","position","absoluteFillObject","bottom","left","right","opacity"],"sources":["C:/Users/LEGION/Desktop/LAB Projects/bookingapp-phase02/src/screens/ItineraryScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Alert,\r\n  Switch,\r\n  Image,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\nconst { width } = Dimensions.get('window');\r\n\r\n// Mock data for different types of locations\r\nconst mockLocations = {\r\n  museums: [\r\n    { \r\n      name: 'National History Museum', \r\n      time: '10:00 AM - 12:00 PM', \r\n      description: 'Explore ancient artifacts and historical exhibits',\r\n      image: 'https://images.unsplash.com/photo-1564501049412-61c2a3083791?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\r\n    },\r\n    { \r\n      name: 'Modern Art Gallery', \r\n      time: '2:00 PM - 4:00 PM', \r\n      description: 'Contemporary art exhibitions and installations',\r\n      image: 'https://images.unsplash.com/photo-1577720580479-7d839d829c73?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\r\n    },\r\n  ],\r\n  entertainment: [\r\n    { \r\n      name: 'City Theme Park', \r\n      time: '11:00 AM - 5:00 PM', \r\n      description: 'Thrilling rides and attractions',\r\n      image: 'https://images.unsplash.com/photo-1560713781-d5a0d2d0c6e0?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\r\n    },\r\n    { \r\n      name: 'Evening Show', \r\n      time: '7:00 PM - 9:00 PM', \r\n      description: 'Local cultural performance',\r\n      image: 'https://images.unsplash.com/photo-1501281668745-f7f57925c3b4?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\r\n    },\r\n  ],\r\n  restaurants: [\r\n    { \r\n      name: 'Local Cuisine Restaurant', \r\n      time: '12:30 PM - 2:00 PM', \r\n      description: 'Traditional dishes and specialties',\r\n      image: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\r\n    },\r\n    { \r\n      name: 'Fine Dining Experience', \r\n      time: '7:30 PM - 9:00 PM', \r\n      description: 'Gourmet dining with city views',\r\n      image: 'https://images.unsplash.com/photo-1414235077428-338989a2e8c0?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\r\n    },\r\n  ],\r\n  parks: [\r\n    { \r\n      name: 'Central Park', \r\n      time: '9:00 AM - 11:00 AM', \r\n      description: 'Morning walk and nature exploration',\r\n      image: 'https://images.unsplash.com/photo-1501785888041-af3ef285b470?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\r\n    },\r\n    { \r\n      name: 'Botanical Gardens', \r\n      time: '3:00 PM - 5:00 PM', \r\n      description: 'Beautiful gardens and plant collections',\r\n      image: 'https://images.unsplash.com/photo-1585320806297-9794b3e4eeae?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'\r\n    },\r\n  ],\r\n};\r\n\r\nconst ItineraryScreen = () => {\r\n  const [destination, setDestination] = useState('');\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [showStartDatePicker, setShowStartDatePicker] = useState(false);\r\n  const [showEndDatePicker, setShowEndDatePicker] = useState(false);\r\n  const [selectedLocations, setSelectedLocations] = useState({\r\n    museums: false,\r\n    entertainment: false,\r\n    restaurants: false,\r\n    parks: false,\r\n  });\r\n  const [generatedItinerary, setGeneratedItinerary] = useState(null);\r\n\r\n  const handleStartDateChange = (event, selectedDate) => {\r\n    setShowStartDatePicker(false);\r\n    if (selectedDate) {\r\n      setStartDate(selectedDate);\r\n    }\r\n  };\r\n\r\n  const handleEndDateChange = (event, selectedDate) => {\r\n    setShowEndDatePicker(false);\r\n    if (selectedDate) {\r\n      setEndDate(selectedDate);\r\n    }\r\n  };\r\n\r\n  const toggleLocation = (location) => {\r\n    setSelectedLocations((prev) => ({\r\n      ...prev,\r\n      [location]: !prev[location],\r\n    }));\r\n  };\r\n\r\n  const generateMockItinerary = () => {\r\n    const days = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24)) + 1;\r\n    const itinerary = [];\r\n\r\n    for (let i = 0; i < days; i++) {\r\n      const dayActivities = [];\r\n      const currentDate = new Date(startDate);\r\n      currentDate.setDate(startDate.getDate() + i);\r\n\r\n      // Add activities based on selected locations\r\n      Object.entries(selectedLocations).forEach(([locationType, isSelected]) => {\r\n        if (isSelected && mockLocations[locationType]) {\r\n          mockLocations[locationType].forEach(activity => {\r\n            dayActivities.push({\r\n              ...activity,\r\n              type: locationType,\r\n            });\r\n          });\r\n        }\r\n      });\r\n\r\n      // Sort activities by time\r\n      dayActivities.sort((a, b) => {\r\n        const timeA = a.time.split(' - ')[0];\r\n        const timeB = b.time.split(' - ')[0];\r\n        return timeA.localeCompare(timeB);\r\n      });\r\n\r\n      itinerary.push({\r\n        date: currentDate.toLocaleDateString(),\r\n        activities: dayActivities,\r\n      });\r\n    }\r\n\r\n    return itinerary;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!destination) {\r\n      Alert.alert('Error', 'Please enter a destination');\r\n      return;\r\n    }\r\n\r\n    const selectedCount = Object.values(selectedLocations).filter(Boolean).length;\r\n    if (selectedCount === 0) {\r\n      Alert.alert('Error', 'Please select at least one location type');\r\n      return;\r\n    }\r\n\r\n    const itinerary = generateMockItinerary();\r\n    setGeneratedItinerary(itinerary);\r\n  };\r\n\r\n  const renderLocationType = (type, label, icon) => (\r\n    <View style={styles.settingItem}>\r\n      <View style={styles.settingItemLeft}>\r\n        <MaterialIcons name={icon} size={24} color=\"#007BFF\" style={styles.settingIcon} />\r\n        <Text style={styles.settingItemLabel}>{label}</Text>\r\n      </View>\r\n      <Switch\r\n        value={selectedLocations[type]}\r\n        onValueChange={() => toggleLocation(type)}\r\n        trackColor={{ false: '#CCC', true: '#007BFF' }}\r\n        thumbColor=\"#FFF\"\r\n      />\r\n    </View>\r\n  );\r\n\r\n  const renderActivityCard = (activity, type) => (\r\n    <View style={styles.activityCard}>\r\n      <Image\r\n        source={{ uri: activity.image }}\r\n        style={styles.activityImage}\r\n      />\r\n      <View style={styles.activityOverlay} />\r\n      <View style={styles.activityContent}>\r\n        <View style={styles.activityHeader}>\r\n          <Text style={styles.activityName}>{activity.name}</Text>\r\n          <View style={styles.activityTypeContainer}>\r\n            <Text style={styles.activityType}>{type.charAt(0).toUpperCase() + type.slice(1)}</Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.activityTimeContainer}>\r\n          <MaterialIcons name=\"access-time\" size={16} color=\"#fff\" />\r\n          <Text style={styles.activityTime}>{activity.time}</Text>\r\n        </View>\r\n        <Text style={styles.activityDescription}>{activity.description}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const renderItinerary = () => {\r\n    if (!generatedItinerary) return null;\r\n\r\n    return (\r\n      <View style={styles.itineraryContainer}>\r\n        <Text style={styles.itineraryTitle}>Your Suggested Itinerary</Text>\r\n        {generatedItinerary.map((day, index) => (\r\n          <View key={index} style={styles.dayContainer}>\r\n            <View style={styles.dayHeader}>\r\n              <Text style={styles.dayNumber}>Day {index + 1}</Text>\r\n              <Text style={styles.dayDate}>{day.date}</Text>\r\n            </View>\r\n            {day.activities.map((activity, actIndex) => (\r\n              <View key={actIndex} style={styles.activityWrapper}>\r\n                {renderActivityCard(activity, activity.type)}\r\n              </View>\r\n            ))}\r\n          </View>\r\n        ))}\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Create Your Itinerary</Text>\r\n      </View>\r\n\r\n      <View style={styles.formContainer}>\r\n        <View style={styles.inputContainer}>\r\n          <MaterialIcons name=\"place\" size={24} color=\"#007BFF\" style={styles.inputIcon} />\r\n          <TextInput\r\n            style={styles.input}\r\n            value={destination}\r\n            onChangeText={setDestination}\r\n            placeholder=\"Enter your destination\"\r\n            placeholderTextColor=\"#999\"\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.dateSection}>\r\n          <View style={styles.dateContainer}>\r\n            <MaterialIcons name=\"event\" size={24} color=\"#007BFF\" style={styles.inputIcon} />\r\n            <TouchableOpacity \r\n              style={styles.dateButton}\r\n              onPress={() => setShowStartDatePicker(true)}\r\n            >\r\n              <Text style={styles.dateButtonText}>Start: {startDate.toLocaleDateString()}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View style={styles.dateContainer}>\r\n            <MaterialIcons name=\"event\" size={24} color=\"#007BFF\" style={styles.inputIcon} />\r\n            <TouchableOpacity \r\n              style={styles.dateButton}\r\n              onPress={() => setShowEndDatePicker(true)}\r\n            >\r\n              <Text style={styles.dateButtonText}>End: {endDate.toLocaleDateString()}</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n\r\n        {showStartDatePicker && (\r\n          <DateTimePicker\r\n            value={startDate}\r\n            mode=\"date\"\r\n            display=\"default\"\r\n            onChange={handleStartDateChange}\r\n          />\r\n        )}\r\n        {showEndDatePicker && (\r\n          <DateTimePicker\r\n            value={endDate}\r\n            mode=\"date\"\r\n            display=\"default\"\r\n            onChange={handleEndDateChange}\r\n          />\r\n        )}\r\n\r\n        <Text style={styles.sectionTitle}>Select Locations</Text>\r\n        {renderLocationType('museums', 'Museums', 'museum')}\r\n        {renderLocationType('entertainment', 'Entertainment', 'attractions')}\r\n        {renderLocationType('restaurants', 'Restaurants', 'restaurant')}\r\n        {renderLocationType('parks', 'Parks', 'park')}\r\n\r\n        <TouchableOpacity \r\n          style={styles.submitButton}\r\n          onPress={handleSubmit}\r\n        >\r\n          <Text style={styles.submitButtonText}>Generate Itinerary</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {renderItinerary()}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  header: {\r\n    padding: 20,\r\n    paddingTop: 40,\r\n    backgroundColor: '#007BFF',\r\n    borderBottomLeftRadius: 30,\r\n    borderBottomRightRadius: 30,\r\n  },\r\n  title: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n  },\r\n  formContainer: {\r\n    padding: 20,\r\n    backgroundColor: '#fff',\r\n    margin: 15,\r\n    borderRadius: 15,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderColor: '#E0E0E0',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 15,\r\n    marginBottom: 15,\r\n    backgroundColor: '#fff',\r\n  },\r\n  inputIcon: {\r\n    marginRight: 10,\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    height: 50,\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  dateSection: {\r\n    marginBottom: 20,\r\n  },\r\n  dateContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  dateButton: {\r\n    flex: 1,\r\n    height: 50,\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 15,\r\n    backgroundColor: '#fff',\r\n    borderWidth: 1,\r\n    borderColor: '#E0E0E0',\r\n    borderRadius: 10,\r\n    marginLeft: 10,\r\n  },\r\n  dateButtonText: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 15,\r\n    color: '#333',\r\n  },\r\n  settingItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 15,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#E0E0E0',\r\n  },\r\n  settingItemLeft: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  settingIcon: {\r\n    marginRight: 10,\r\n  },\r\n  settingItemLabel: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  submitButton: {\r\n    marginTop: 20,\r\n    backgroundColor: '#007BFF',\r\n    paddingVertical: 15,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n  },\r\n  submitButtonText: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  itineraryContainer: {\r\n    padding: 15,\r\n  },\r\n  itineraryTitle: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n    color: '#333',\r\n  },\r\n  dayContainer: {\r\n    marginBottom: 25,\r\n  },\r\n  dayHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  dayNumber: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#007BFF',\r\n    marginRight: 10,\r\n  },\r\n  dayDate: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n  },\r\n  activityWrapper: {\r\n    marginBottom: 15,\r\n  },\r\n  activityCard: {\r\n    height: 200,\r\n    borderRadius: 15,\r\n    overflow: 'hidden',\r\n    backgroundColor: '#fff',\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  activityImage: {\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n  },\r\n  activityOverlay: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    backgroundColor: 'rgba(0,0,0,0.4)',\r\n  },\r\n  activityContent: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    padding: 15,\r\n  },\r\n  activityHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  activityName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n    flex: 1,\r\n  },\r\n  activityTypeContainer: {\r\n    backgroundColor: '#007BFF',\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 4,\r\n    borderRadius: 12,\r\n  },\r\n  activityType: {\r\n    color: '#fff',\r\n    fontSize: 12,\r\n    fontWeight: 'bold',\r\n  },\r\n  activityTimeContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  activityTime: {\r\n    color: '#fff',\r\n    fontSize: 14,\r\n    marginLeft: 5,\r\n  },\r\n  activityDescription: {\r\n    color: '#fff',\r\n    fontSize: 14,\r\n    opacity: 0.9,\r\n  },\r\n});\r\n\r\nexport default ItineraryScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}