{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport Dimensions from \"../Dimensions\";\nvar PixelRatio = function () {\n  function PixelRatio() {\n    _classCallCheck(this, PixelRatio);\n  }\n  return _createClass(PixelRatio, null, [{\n    key: \"get\",\n    value: function get() {\n      return Dimensions.get('window').scale;\n    }\n  }, {\n    key: \"getFontScale\",\n    value: function getFontScale() {\n      return Dimensions.get('window').fontScale || PixelRatio.get();\n    }\n  }, {\n    key: \"getPixelSizeForLayoutSize\",\n    value: function getPixelSizeForLayoutSize(layoutSize) {\n      return Math.round(layoutSize * PixelRatio.get());\n    }\n  }, {\n    key: \"roundToNearestPixel\",\n    value: function roundToNearestPixel(layoutSize) {\n      var ratio = PixelRatio.get();\n      return Math.round(layoutSize * ratio) / ratio;\n    }\n  }]);\n}();\nexport { PixelRatio as default };","map":{"version":3,"names":["Dimensions","PixelRatio","_classCallCheck","_createClass","key","value","get","scale","getFontScale","fontScale","getPixelSizeForLayoutSize","layoutSize","Math","round","roundToNearestPixel","ratio","default"],"sources":["C:/Users/LEGION/Desktop/LAB Projects/bookingapp-phase02/node_modules/react-native-web/dist/exports/PixelRatio/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\n\r\nimport Dimensions from '../Dimensions';\r\n\r\n/**\r\n * PixelRatio gives access to the device pixel density.\r\n */\r\nexport default class PixelRatio {\r\n  /**\r\n   * Returns the device pixel density.\r\n   */\r\n  static get() {\r\n    return Dimensions.get('window').scale;\r\n  }\r\n\r\n  /**\r\n   * No equivalent for Web\r\n   */\r\n  static getFontScale() {\r\n    return Dimensions.get('window').fontScale || PixelRatio.get();\r\n  }\r\n\r\n  /**\r\n   * Converts a layout size (dp) to pixel size (px).\r\n   * Guaranteed to return an integer number.\r\n   */\r\n  static getPixelSizeForLayoutSize(layoutSize) {\r\n    return Math.round(layoutSize * PixelRatio.get());\r\n  }\r\n\r\n  /**\r\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\r\n   * an integer number of pixels. For example, on a device with a PixelRatio\r\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\r\n   * exactly (8.33 * 3) = 25 pixels.\r\n   */\r\n  static roundToNearestPixel(layoutSize) {\r\n    var ratio = PixelRatio.get();\r\n    return Math.round(layoutSize * ratio) / ratio;\r\n  }\r\n}"],"mappings":";;AAUA,OAAOA,UAAU;AAAsB,IAKlBC,UAAU;EAAA,SAAAA,WAAA;IAAAC,eAAA,OAAAD,UAAA;EAAA;EAAA,OAAAE,YAAA,CAAAF,UAAA;IAAAG,GAAA;IAAAC,KAAA,EAI7B,SAAOC,GAAGA,CAAA,EAAG;MACX,OAAON,UAAU,CAACM,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;IACvC;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAKD,SAAOG,YAAYA,CAAA,EAAG;MACpB,OAAOR,UAAU,CAACM,GAAG,CAAC,QAAQ,CAAC,CAACG,SAAS,IAAIR,UAAU,CAACK,GAAG,CAAC,CAAC;IAC/D;EAAC;IAAAF,GAAA;IAAAC,KAAA,EAMD,SAAOK,yBAAyBA,CAACC,UAAU,EAAE;MAC3C,OAAOC,IAAI,CAACC,KAAK,CAACF,UAAU,GAAGV,UAAU,CAACK,GAAG,CAAC,CAAC,CAAC;IAClD;EAAC;IAAAF,GAAA;IAAAC,KAAA,EAQD,SAAOS,mBAAmBA,CAACH,UAAU,EAAE;MACrC,IAAII,KAAK,GAAGd,UAAU,CAACK,GAAG,CAAC,CAAC;MAC5B,OAAOM,IAAI,CAACC,KAAK,CAACF,UAAU,GAAGI,KAAK,CAAC,GAAGA,KAAK;IAC/C;EAAC;AAAA;AAAA,SAhCkBd,UAAU,IAAAe,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}