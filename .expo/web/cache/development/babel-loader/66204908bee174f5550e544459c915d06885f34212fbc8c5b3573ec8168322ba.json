{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nvar delay = function delay(ms) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, ms);\n  });\n};\nvar mockHotels = [{\n  id: '1',\n  name: 'Luxury Grand Hotel',\n  location: 'New York, USA',\n  description: 'Experience luxury at its finest in the heart of Manhattan. Our hotel offers stunning views of Central Park and world-class amenities.',\n  rating: 4.8,\n  price: 299,\n  images: ['https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80', 'https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80', 'https://images.unsplash.com/photo-1551882547-ff40c63fe5fa?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80'],\n  amenities: ['Free WiFi', 'Swimming Pool', 'Spa', 'Restaurant', 'Fitness Center'],\n  rooms: [{\n    id: '1-1',\n    type: 'Deluxe Room',\n    price: 299,\n    capacity: 2\n  }, {\n    id: '1-2',\n    type: 'Executive Suite',\n    price: 499,\n    capacity: 2\n  }, {\n    id: '1-3',\n    type: 'Presidential Suite',\n    price: 999,\n    capacity: 4\n  }]\n}, {\n  id: '2',\n  name: 'Beachfront Paradise Resort',\n  location: 'Miami, USA',\n  description: 'Wake up to the sound of waves at our beachfront resort. Enjoy direct beach access and tropical paradise views.',\n  rating: 4.7,\n  price: 249,\n  images: ['https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80', 'https://images.unsplash.com/photo-1551882547-ff40c63fe5fa?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80', 'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80'],\n  amenities: ['Beach Access', 'Pool', 'Restaurant', 'Bar', 'Spa'],\n  rooms: [{\n    id: '2-1',\n    type: 'Ocean View Room',\n    price: 249,\n    capacity: 2\n  }, {\n    id: '2-2',\n    type: 'Beachfront Suite',\n    price: 399,\n    capacity: 2\n  }, {\n    id: '2-3',\n    type: 'Family Suite',\n    price: 599,\n    capacity: 4\n  }]\n}, {\n  id: '3',\n  name: 'Mountain View Lodge',\n  location: 'Aspen, USA',\n  description: 'Nestled in the mountains, our lodge offers a perfect blend of rustic charm and modern comfort.',\n  rating: 4.6,\n  price: 199,\n  images: ['https://images.unsplash.com/photo-1551882547-ff40c63fe5fa?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80', 'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80', 'https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80'],\n  amenities: ['Ski Access', 'Hot Tub', 'Restaurant', 'Bar', 'Spa'],\n  rooms: [{\n    id: '3-1',\n    type: 'Standard Room',\n    price: 199,\n    capacity: 2\n  }, {\n    id: '3-2',\n    type: 'Mountain View Suite',\n    price: 349,\n    capacity: 2\n  }, {\n    id: '3-3',\n    type: 'Family Room',\n    price: 449,\n    capacity: 4\n  }]\n}];\nvar mockBookings = [{\n  id: '1',\n  hotelId: '1',\n  hotelName: 'Luxury Grand Hotel',\n  userId: 'user123',\n  checkIn: '2024-04-15',\n  checkOut: '2024-04-20',\n  guests: 2,\n  roomType: 'Deluxe Room',\n  totalPrice: 1495,\n  status: 'confirmed',\n  createdAt: '2024-03-15T10:00:00Z'\n}, {\n  id: '2',\n  hotelId: '2',\n  hotelName: 'Beachfront Paradise Resort',\n  userId: 'user123',\n  checkIn: '2024-05-01',\n  checkOut: '2024-05-07',\n  guests: 2,\n  roomType: 'Ocean View Room',\n  totalPrice: 1494,\n  status: 'pending',\n  createdAt: '2024-03-20T15:30:00Z'\n}];\nvar mockVideos = [{\n  id: '1',\n  title: 'Luxury Grand Hotel Tour',\n  description: 'Take a virtual tour of our luxurious hotel in New York',\n  videoUrl: 'https://example.com/video1.mp4',\n  thumbnailUrl: 'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n  hotelId: '1',\n  likes: 1234,\n  comments: 56,\n  shares: 78,\n  createdAt: '2024-03-15T10:00:00Z'\n}, {\n  id: '2',\n  title: 'Beachfront Paradise Resort',\n  description: 'Experience the beauty of our beachfront resort',\n  videoUrl: 'https://example.com/video2.mp4',\n  thumbnailUrl: 'https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n  hotelId: '2',\n  likes: 2345,\n  comments: 89,\n  shares: 123,\n  createdAt: '2024-03-20T15:30:00Z'\n}];\nvar apiService = {\n  login: function () {\n    var _login = _asyncToGenerator(function* (credentials) {\n      try {\n        yield delay(1000);\n        return {\n          token: 'mock-token',\n          user: {\n            id: 1,\n            name: 'Test User'\n          }\n        };\n      } catch (error) {\n        throw new Error('Login failed');\n      }\n    });\n    function login(_x) {\n      return _login.apply(this, arguments);\n    }\n    return login;\n  }(),\n  register: function () {\n    var _register = _asyncToGenerator(function* (userData) {\n      try {\n        yield delay(1000);\n        return {\n          token: 'mock-token',\n          user: _objectSpread({\n            id: 1\n          }, userData)\n        };\n      } catch (error) {\n        throw new Error('Registration failed');\n      }\n    });\n    function register(_x2) {\n      return _register.apply(this, arguments);\n    }\n    return register;\n  }(),\n  getHotels: function () {\n    var _getHotels = _asyncToGenerator(function* () {\n      try {\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 1000);\n        });\n        return mockHotels;\n      } catch (error) {\n        throw new Error('Failed to fetch hotels');\n      }\n    });\n    function getHotels() {\n      return _getHotels.apply(this, arguments);\n    }\n    return getHotels;\n  }(),\n  getHotelById: function () {\n    var _getHotelById = _asyncToGenerator(function* (id) {\n      try {\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 500);\n        });\n        var hotel = mockHotels.find(function (h) {\n          return h.id === id;\n        });\n        if (!hotel) {\n          throw new Error('Hotel not found');\n        }\n        return hotel;\n      } catch (error) {\n        throw new Error('Failed to fetch hotel details');\n      }\n    });\n    function getHotelById(_x3) {\n      return _getHotelById.apply(this, arguments);\n    }\n    return getHotelById;\n  }(),\n  searchHotels: function () {\n    var _searchHotels = _asyncToGenerator(function* (query) {\n      try {\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 800);\n        });\n        var searchTerm = query.toLowerCase();\n        return mockHotels.filter(function (hotel) {\n          return hotel.name.toLowerCase().includes(searchTerm) || hotel.location.toLowerCase().includes(searchTerm) || hotel.description.toLowerCase().includes(searchTerm);\n        });\n      } catch (error) {\n        throw new Error('Failed to search hotels');\n      }\n    });\n    function searchHotels(_x4) {\n      return _searchHotels.apply(this, arguments);\n    }\n    return searchHotels;\n  }(),\n  createBooking: function () {\n    var _createBooking = _asyncToGenerator(function* (bookingData) {\n      try {\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 1000);\n        });\n        var newBooking = _objectSpread(_objectSpread({\n          id: String(mockBookings.length + 1)\n        }, bookingData), {}, {\n          status: 'confirmed',\n          createdAt: new Date().toISOString()\n        });\n        mockBookings.push(newBooking);\n        return newBooking;\n      } catch (error) {\n        throw new Error('Failed to create booking');\n      }\n    });\n    function createBooking(_x5) {\n      return _createBooking.apply(this, arguments);\n    }\n    return createBooking;\n  }(),\n  getBookings: function () {\n    var _getBookings = _asyncToGenerator(function* (userId) {\n      try {\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 800);\n        });\n        return mockBookings.filter(function (booking) {\n          return booking.userId === userId;\n        });\n      } catch (error) {\n        throw new Error('Failed to fetch bookings');\n      }\n    });\n    function getBookings(_x6) {\n      return _getBookings.apply(this, arguments);\n    }\n    return getBookings;\n  }(),\n  getBookingById: function () {\n    var _getBookingById = _asyncToGenerator(function* (id) {\n      try {\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 500);\n        });\n        var booking = mockBookings.find(function (b) {\n          return b.id === id;\n        });\n        if (!booking) {\n          throw new Error('Booking not found');\n        }\n        return booking;\n      } catch (error) {\n        throw new Error('Failed to fetch booking details');\n      }\n    });\n    function getBookingById(_x7) {\n      return _getBookingById.apply(this, arguments);\n    }\n    return getBookingById;\n  }(),\n  getShortVideos: function () {\n    var _getShortVideos = _asyncToGenerator(function* () {\n      try {\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 1000);\n        });\n        return mockVideos;\n      } catch (error) {\n        throw new Error('Failed to fetch videos');\n      }\n    });\n    function getShortVideos() {\n      return _getShortVideos.apply(this, arguments);\n    }\n    return getShortVideos;\n  }(),\n  getHotelVideos: function () {\n    var _getHotelVideos = _asyncToGenerator(function* (hotelId) {\n      try {\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 800);\n        });\n        return mockVideos.filter(function (video) {\n          return video.hotelId === hotelId;\n        });\n      } catch (error) {\n        throw new Error('Failed to fetch hotel videos');\n      }\n    });\n    function getHotelVideos(_x8) {\n      return _getHotelVideos.apply(this, arguments);\n    }\n    return getHotelVideos;\n  }(),\n  getHotelImages: function () {\n    var _getHotelImages = _asyncToGenerator(function* (hotelId) {\n      try {\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 500);\n        });\n        var hotel = mockHotels.find(function (h) {\n          return h.id === hotelId;\n        });\n        if (!hotel) {\n          throw new Error('Hotel not found');\n        }\n        return hotel.images;\n      } catch (error) {\n        throw new Error('Failed to fetch hotel images');\n      }\n    });\n    function getHotelImages(_x9) {\n      return _getHotelImages.apply(this, arguments);\n    }\n    return getHotelImages;\n  }(),\n  getTravelAssistantResponse: function () {\n    var _getTravelAssistantResponse = _asyncToGenerator(function* (message) {\n      yield new Promise(function (resolve) {\n        return setTimeout(resolve, 1000);\n      });\n      var responses = {\n        'hello': 'Hello! How can I help you with your travel plans today?',\n        'recommend': 'I can recommend some great hotels based on your preferences. What type of accommodation are you looking for?',\n        'price': 'I can help you find the best deals. What\\'s your budget range?',\n        'location': 'I can suggest hotels in specific locations. Where would you like to stay?',\n        'amenities': 'I can help you find hotels with specific amenities. What are you looking for?',\n        'booking': 'I can help you with your booking. Do you have any specific dates in mind?'\n      };\n      var defaultResponse = 'I\\'m here to help with your travel plans. You can ask me about hotel recommendations, prices, locations, amenities, or booking assistance.';\n      var lowerMessage = message.toLowerCase();\n      for (var _ref of Object.entries(responses)) {\n        var _ref2 = _slicedToArray(_ref, 2);\n        var key = _ref2[0];\n        var response = _ref2[1];\n        if (lowerMessage.includes(key)) {\n          return {\n            message: response\n          };\n        }\n      }\n      return {\n        message: defaultResponse\n      };\n    });\n    function getTravelAssistantResponse(_x10) {\n      return _getTravelAssistantResponse.apply(this, arguments);\n    }\n    return getTravelAssistantResponse;\n  }(),\n  getHotelVideo: function () {\n    var _getHotelVideo = _asyncToGenerator(function* (hotelId) {\n      yield new Promise(function (resolve) {\n        return setTimeout(resolve, 1000);\n      });\n      var videos = {\n        '1': {\n          url: 'https://example.com/videos/hotel1.mp4',\n          title: 'Luxury Beach Resort',\n          description: 'Experience the ultimate beachfront luxury'\n        },\n        '2': {\n          url: 'https://example.com/videos/hotel2.mp4',\n          title: 'Mountain View Hotel',\n          description: 'Stunning mountain views and modern amenities'\n        },\n        '3': {\n          url: 'https://example.com/videos/hotel3.mp4',\n          title: 'City Center Hotel',\n          description: 'Perfect location in the heart of the city'\n        }\n      };\n      return videos[hotelId] || null;\n    });\n    function getHotelVideo(_x11) {\n      return _getHotelVideo.apply(this, arguments);\n    }\n    return getHotelVideo;\n  }()\n};\nexport default apiService;","map":{"version":3,"names":["delay","ms","Promise","resolve","setTimeout","mockHotels","id","name","location","description","rating","price","images","amenities","rooms","type","capacity","mockBookings","hotelId","hotelName","userId","checkIn","checkOut","guests","roomType","totalPrice","status","createdAt","mockVideos","title","videoUrl","thumbnailUrl","likes","comments","shares","apiService","login","_login","_asyncToGenerator","credentials","token","user","error","Error","_x","apply","arguments","register","_register","userData","_objectSpread","_x2","getHotels","_getHotels","getHotelById","_getHotelById","hotel","find","h","_x3","searchHotels","_searchHotels","query","searchTerm","toLowerCase","filter","includes","_x4","createBooking","_createBooking","bookingData","newBooking","String","length","Date","toISOString","push","_x5","getBookings","_getBookings","booking","_x6","getBookingById","_getBookingById","b","_x7","getShortVideos","_getShortVideos","getHotelVideos","_getHotelVideos","video","_x8","getHotelImages","_getHotelImages","_x9","getTravelAssistantResponse","_getTravelAssistantResponse","message","responses","defaultResponse","lowerMessage","_ref","Object","entries","_ref2","_slicedToArray","key","response","_x10","getHotelVideo","_getHotelVideo","videos","url","_x11"],"sources":["/Users/huynhquochieu/SWINBURNE/LAB/hotel-booking-app/src/api/apiService.js"],"sourcesContent":["// Simulated delay to mimic API calls\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n// Mock data for hotels\nconst mockHotels = [\n  {\n    id: '1',\n    name: 'Luxury Grand Hotel',\n    location: 'New York, USA',\n    description: 'Experience luxury at its finest in the heart of Manhattan. Our hotel offers stunning views of Central Park and world-class amenities.',\n    rating: 4.8,\n    price: 299,\n    images: [\n      'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n      'https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n      'https://images.unsplash.com/photo-1551882547-ff40c63fe5fa?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n    ],\n    amenities: ['Free WiFi', 'Swimming Pool', 'Spa', 'Restaurant', 'Fitness Center'],\n    rooms: [\n      { id: '1-1', type: 'Deluxe Room', price: 299, capacity: 2 },\n      { id: '1-2', type: 'Executive Suite', price: 499, capacity: 2 },\n      { id: '1-3', type: 'Presidential Suite', price: 999, capacity: 4 },\n    ],\n  },\n  {\n    id: '2',\n    name: 'Beachfront Paradise Resort',\n    location: 'Miami, USA',\n    description: 'Wake up to the sound of waves at our beachfront resort. Enjoy direct beach access and tropical paradise views.',\n    rating: 4.7,\n    price: 249,\n    images: [\n      'https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n      'https://images.unsplash.com/photo-1551882547-ff40c63fe5fa?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n      'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n    ],\n    amenities: ['Beach Access', 'Pool', 'Restaurant', 'Bar', 'Spa'],\n    rooms: [\n      { id: '2-1', type: 'Ocean View Room', price: 249, capacity: 2 },\n      { id: '2-2', type: 'Beachfront Suite', price: 399, capacity: 2 },\n      { id: '2-3', type: 'Family Suite', price: 599, capacity: 4 },\n    ],\n  },\n  {\n    id: '3',\n    name: 'Mountain View Lodge',\n    location: 'Aspen, USA',\n    description: 'Nestled in the mountains, our lodge offers a perfect blend of rustic charm and modern comfort.',\n    rating: 4.6,\n    price: 199,\n    images: [\n      'https://images.unsplash.com/photo-1551882547-ff40c63fe5fa?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n      'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n      'https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n    ],\n    amenities: ['Ski Access', 'Hot Tub', 'Restaurant', 'Bar', 'Spa'],\n    rooms: [\n      { id: '3-1', type: 'Standard Room', price: 199, capacity: 2 },\n      { id: '3-2', type: 'Mountain View Suite', price: 349, capacity: 2 },\n      { id: '3-3', type: 'Family Room', price: 449, capacity: 4 },\n    ],\n  },\n];\n\n// Mock data for bookings\nconst mockBookings = [\n  {\n    id: '1',\n    hotelId: '1',\n    hotelName: 'Luxury Grand Hotel',\n    userId: 'user123',\n    checkIn: '2024-04-15',\n    checkOut: '2024-04-20',\n    guests: 2,\n    roomType: 'Deluxe Room',\n    totalPrice: 1495,\n    status: 'confirmed',\n    createdAt: '2024-03-15T10:00:00Z',\n  },\n  {\n    id: '2',\n    hotelId: '2',\n    hotelName: 'Beachfront Paradise Resort',\n    userId: 'user123',\n    checkIn: '2024-05-01',\n    checkOut: '2024-05-07',\n    guests: 2,\n    roomType: 'Ocean View Room',\n    totalPrice: 1494,\n    status: 'pending',\n    createdAt: '2024-03-20T15:30:00Z',\n  },\n];\n\n// Mock data for short videos\nconst mockVideos = [\n  {\n    id: '1',\n    title: 'Luxury Grand Hotel Tour',\n    description: 'Take a virtual tour of our luxurious hotel in New York',\n    videoUrl: 'https://example.com/video1.mp4',\n    thumbnailUrl: 'https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n    hotelId: '1',\n    likes: 1234,\n    comments: 56,\n    shares: 78,\n    createdAt: '2024-03-15T10:00:00Z',\n  },\n  {\n    id: '2',\n    title: 'Beachfront Paradise Resort',\n    description: 'Experience the beauty of our beachfront resort',\n    videoUrl: 'https://example.com/video2.mp4',\n    thumbnailUrl: 'https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80',\n    hotelId: '2',\n    likes: 2345,\n    comments: 89,\n    shares: 123,\n    createdAt: '2024-03-20T15:30:00Z',\n  },\n];\n\nconst apiService = {\n  // Auth endpoints\n  login: async (credentials) => {\n    try {\n      await delay(1000);\n      return { token: 'mock-token', user: { id: 1, name: 'Test User' } };\n    } catch (error) {\n      throw new Error('Login failed');\n    }\n  },\n\n  register: async (userData) => {\n    try {\n      await delay(1000);\n      return { token: 'mock-token', user: { id: 1, ...userData } };\n    } catch (error) {\n      throw new Error('Registration failed');\n    }\n  },\n\n  // Hotel methods\n  getHotels: async () => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      return mockHotels;\n    } catch (error) {\n      throw new Error('Failed to fetch hotels');\n    }\n  },\n\n  getHotelById: async (id) => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const hotel = mockHotels.find(h => h.id === id);\n      if (!hotel) {\n        throw new Error('Hotel not found');\n      }\n      return hotel;\n    } catch (error) {\n      throw new Error('Failed to fetch hotel details');\n    }\n  },\n\n  searchHotels: async (query) => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 800));\n      const searchTerm = query.toLowerCase();\n      return mockHotels.filter(hotel => \n        hotel.name.toLowerCase().includes(searchTerm) ||\n        hotel.location.toLowerCase().includes(searchTerm) ||\n        hotel.description.toLowerCase().includes(searchTerm)\n      );\n    } catch (error) {\n      throw new Error('Failed to search hotels');\n    }\n  },\n\n  // Booking methods\n  createBooking: async (bookingData) => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      const newBooking = {\n        id: String(mockBookings.length + 1),\n        ...bookingData,\n        status: 'confirmed',\n        createdAt: new Date().toISOString(),\n      };\n      mockBookings.push(newBooking);\n      return newBooking;\n    } catch (error) {\n      throw new Error('Failed to create booking');\n    }\n  },\n\n  getBookings: async (userId) => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 800));\n      return mockBookings.filter(booking => booking.userId === userId);\n    } catch (error) {\n      throw new Error('Failed to fetch bookings');\n    }\n  },\n\n  getBookingById: async (id) => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const booking = mockBookings.find(b => b.id === id);\n      if (!booking) {\n        throw new Error('Booking not found');\n      }\n      return booking;\n    } catch (error) {\n      throw new Error('Failed to fetch booking details');\n    }\n  },\n\n  // Video methods\n  getShortVideos: async () => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      return mockVideos;\n    } catch (error) {\n      throw new Error('Failed to fetch videos');\n    }\n  },\n\n  getHotelVideos: async (hotelId) => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 800));\n      return mockVideos.filter(video => video.hotelId === hotelId);\n    } catch (error) {\n      throw new Error('Failed to fetch hotel videos');\n    }\n  },\n\n  // Image methods\n  getHotelImages: async (hotelId) => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const hotel = mockHotels.find(h => h.id === hotelId);\n      if (!hotel) {\n        throw new Error('Hotel not found');\n      }\n      return hotel.images;\n    } catch (error) {\n      throw new Error('Failed to fetch hotel images');\n    }\n  },\n\n  getTravelAssistantResponse: async (message) => {\n    // Simulate AI response\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    const responses = {\n      'hello': 'Hello! How can I help you with your travel plans today?',\n      'recommend': 'I can recommend some great hotels based on your preferences. What type of accommodation are you looking for?',\n      'price': 'I can help you find the best deals. What\\'s your budget range?',\n      'location': 'I can suggest hotels in specific locations. Where would you like to stay?',\n      'amenities': 'I can help you find hotels with specific amenities. What are you looking for?',\n      'booking': 'I can help you with your booking. Do you have any specific dates in mind?',\n    };\n\n    const defaultResponse = 'I\\'m here to help with your travel plans. You can ask me about hotel recommendations, prices, locations, amenities, or booking assistance.';\n\n    const lowerMessage = message.toLowerCase();\n    for (const [key, response] of Object.entries(responses)) {\n      if (lowerMessage.includes(key)) {\n        return { message: response };\n      }\n    }\n\n    return { message: defaultResponse };\n  },\n\n  getHotelVideo: async (hotelId) => {\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    const videos = {\n      '1': {\n        url: 'https://example.com/videos/hotel1.mp4',\n        title: 'Luxury Beach Resort',\n        description: 'Experience the ultimate beachfront luxury',\n      },\n      '2': {\n        url: 'https://example.com/videos/hotel2.mp4',\n        title: 'Mountain View Hotel',\n        description: 'Stunning mountain views and modern amenities',\n      },\n      '3': {\n        url: 'https://example.com/videos/hotel3.mp4',\n        title: 'City Center Hotel',\n        description: 'Perfect location in the heart of the city',\n      },\n    };\n\n    return videos[hotelId] || null;\n  },\n};\n\nexport default apiService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}