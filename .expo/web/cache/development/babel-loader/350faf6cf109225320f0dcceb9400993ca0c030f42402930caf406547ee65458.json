{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginStart, loginSuccess, loginFailure, clearError } from \"../redux/slices/bookingsSlice\";\nimport { mockApi } from \"../api/apiService\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    loading = _useSelector.loading,\n    error = _useSelector.error;\n  useEffect(function () {\n    if (error) {\n      Alert.alert('Error', error);\n      dispatch(clearError());\n    }\n  }, [error, dispatch]);\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email || !password) {\n        Alert.alert('Error', 'Please fill in all fields');\n        return;\n      }\n      try {\n        dispatch(loginStart());\n        var response = yield mockApi.login({\n          email: email,\n          password: password\n        });\n        yield AsyncStorage.setItem('token', response.token);\n        yield AsyncStorage.setItem('refreshToken', response.refreshToken);\n        dispatch(loginSuccess(response.user));\n      } catch (error) {\n        dispatch(loginFailure(error.message || 'Login failed'));\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: [_jsxs(View, {\n        style: styles.logoContainer,\n        children: [_jsx(Image, {\n          source: {\n            uri: 'https://via.placeholder.com/150?text=Hotel+App'\n          },\n          style: styles.logo,\n          resizeMode: \"contain\"\n        }), _jsx(Text, {\n          style: styles.title,\n          children: \"Hotel Booking App\"\n        })]\n      }), _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsx(Text, {\n          style: styles.label,\n          children: \"Email\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter your email\",\n          value: email,\n          onChangeText: setEmail,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\"\n        }), _jsx(Text, {\n          style: styles.label,\n          children: \"Password\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter your password\",\n          value: password,\n          onChangeText: setPassword,\n          secureTextEntry: true\n        }), _jsx(TouchableOpacity, {\n          style: styles.loginButton,\n          onPress: handleLogin,\n          disabled: loading,\n          children: loading ? _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Loading...\"\n          }) : _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Login\"\n          })\n        }), _jsxs(View, {\n          style: styles.registerContainer,\n          children: [_jsx(Text, {\n            style: styles.registerText,\n            children: \"Don't have an account? \"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate('Register');\n            },\n            children: _jsx(Text, {\n              style: styles.registerLink,\n              children: \"Register\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF'\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    padding: 20\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 40\n  },\n  logo: {\n    width: 120,\n    height: 120,\n    marginBottom: 10\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333333'\n  },\n  formContainer: {\n    width: '100%'\n  },\n  label: {\n    fontSize: 16,\n    color: '#333333',\n    marginBottom: 5\n  },\n  input: {\n    height: 50,\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    borderRadius: 8,\n    paddingHorizontal: 15,\n    marginBottom: 20,\n    fontSize: 16\n  },\n  loginButton: {\n    backgroundColor: '#007BFF',\n    height: 50,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  registerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 20\n  },\n  registerText: {\n    fontSize: 16,\n    color: '#333333'\n  },\n  registerLink: {\n    fontSize: 16,\n    color: '#007BFF',\n    fontWeight: 'bold'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","ScrollView","KeyboardAvoidingView","Platform","Alert","Image","useDispatch","useSelector","loginStart","loginSuccess","loginFailure","clearError","mockApi","AsyncStorage","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","dispatch","_useSelector","state","auth","loading","error","alert","handleLogin","_ref2","_asyncToGenerator","response","login","setItem","token","refreshToken","user","message","apply","arguments","behavior","OS","style","styles","container","children","contentContainerStyle","scrollContainer","logoContainer","source","uri","logo","resizeMode","title","formContainer","label","input","placeholder","value","onChangeText","keyboardType","autoCapitalize","secureTextEntry","loginButton","onPress","disabled","buttonText","registerContainer","registerText","navigate","registerLink","create","flex","backgroundColor","flexGrow","justifyContent","padding","alignItems","marginBottom","width","height","fontSize","fontWeight","color","borderWidth","borderColor","borderRadius","paddingHorizontal","marginTop","flexDirection"],"sources":["/Users/huynhquochieu/SWINBURNE/LAB/hotel-booking-app/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  ScrollView,\n  KeyboardAvoidingView,\n  Platform,\n  Alert,\n  Image,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginStart, loginSuccess, loginFailure, clearError } from '../redux/slices/bookingsSlice';\nimport { mockApi } from '../api/apiService';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const { loading, error } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (error) {\n      Alert.alert('Error', error);\n      dispatch(clearError());\n    }\n  }, [error, dispatch]);\n\n  const handleLogin = async () => {\n    if (!email || !password) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n\n    try {\n      dispatch(loginStart());\n      \n      // Call the mock API for demonstration\n      const response = await mockApi.login({ email, password });\n      \n      // Store the token in AsyncStorage\n      await AsyncStorage.setItem('token', response.token);\n      await AsyncStorage.setItem('refreshToken', response.refreshToken);\n      \n      // Dispatch success action with user data\n      dispatch(loginSuccess(response.user));\n    } catch (error) {\n      dispatch(loginFailure(error.message || 'Login failed'));\n    }\n  };\n\n  return (\n    <KeyboardAvoidingView\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      style={styles.container}\n    >\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <View style={styles.logoContainer}>\n          <Image\n            source={{ uri: 'https://via.placeholder.com/150?text=Hotel+App' }}\n            style={styles.logo}\n            resizeMode=\"contain\"\n          />\n          <Text style={styles.title}>Hotel Booking App</Text>\n        </View>\n\n        <View style={styles.formContainer}>\n          <Text style={styles.label}>Email</Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Enter your email\"\n            value={email}\n            onChangeText={setEmail}\n            keyboardType=\"email-address\"\n            autoCapitalize=\"none\"\n          />\n\n          <Text style={styles.label}>Password</Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Enter your password\"\n            value={password}\n            onChangeText={setPassword}\n            secureTextEntry\n          />\n\n          <TouchableOpacity\n            style={styles.loginButton}\n            onPress={handleLogin}\n            disabled={loading}\n          >\n            {loading ? (\n              <Text style={styles.buttonText}>Loading...</Text>\n            ) : (\n              <Text style={styles.buttonText}>Login</Text>\n            )}\n          </TouchableOpacity>\n\n          <View style={styles.registerContainer}>\n            <Text style={styles.registerText}>Don't have an account? </Text>\n            <TouchableOpacity onPress={() => navigation.navigate('Register')}>\n              <Text style={styles.registerLink}>Register</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    padding: 20,\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 40,\n  },\n  logo: {\n    width: 120,\n    height: 120,\n    marginBottom: 10,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333333',\n  },\n  formContainer: {\n    width: '100%',\n  },\n  label: {\n    fontSize: 16,\n    color: '#333333',\n    marginBottom: 5,\n  },\n  input: {\n    height: 50,\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    borderRadius: 8,\n    paddingHorizontal: 15,\n    marginBottom: 20,\n    fontSize: 16,\n  },\n  loginButton: {\n    backgroundColor: '#007BFF',\n    height: 50,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  registerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  registerText: {\n    fontSize: 16,\n    color: '#333333',\n  },\n  registerLink: {\n    fontSize: 16,\n    color: '#007BFF',\n    fontWeight: 'bold',\n  },\n});\n\nexport default LoginScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}